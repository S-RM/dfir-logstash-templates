input 
{
    file
    {
        path => "{PATH}"
        start_position => "beginning"
        sincedb_path => "/dev/null"
        file_completed_action => "log"
        file_completed_log_path => "/root/logstash/ingest.log"
        mode => "read"
    }
}

filter 
{

    mutate
    {
        gsub => ["message", "[\u0000]", ""]
    }

    csv
    {
        columns =>
        [
            "PSComputerName",
            "RunspaceId",
            "PSShowComputerName",
            "Timestamp",
            "ClientIp",
            "ClientHostname",
            "ServerIp",
            "ServerHostname",
            "SourceContext",
            "ConnectorId",
            "Source",
            "EventId",
            "InternalMessageId",
            "MessageId",
            "Recipients",
            "RecipientStatus",
            "TotalBytes",
            "RecipientCount",
            "RelatedRecipientAddress",
            "Reference",
            "MessageSubject",
            "Sender",
            "ReturnPath",
            "Directionality",
            "TenantId",
            "OriginalClientIp",
            "MessageInfo",
            "MessageLatency",
            "MessageLatencyType",
            "EventData"
        ]
    }

    fingerprint
    {
        method => "MD5"
        key => "fingerprint"
        base64encode => true
        target => "[@metadata][fingerprint]"
    }

    mutate
    {
        remove_field => ["message"]
    }

 
 	if [ServerIp] =~ /^\s*$/
	{
		mutate
		{
			remove_field => ["ServerIp"]
		}	
	}

 	if [ClientIp] =~ /^\s*$/
	{
		mutate
		{
			remove_field => ["ClientIp"]
		}	
	}

 	if [OriginalClientIp] =~ /^\s*$/
	{
		mutate
		{
			remove_field => ["OriginalClientIp"]
		}	
	}

    if [ServerIp]
    {
        geoip
        {
            source => "ServerIp"
            fields => ["city_name", "country_code2", "country_name", "latitude", "longitude"]
            target => "ServerIPLocation"
        }
        mutate
        {
            rename =>
            {
                "[ServerIPLocation][latitude]" => "[ServerIPLocation][geo][lat]"
                "[ServerIPLocation][longitude]" => "[ServerIPLocation][geo][lon]"
            }
        }
    }

    if [ClientIp]
    {
        geoip
        {
            source => "ClientIp"
            fields => ["city_name", "country_code2", "country_name", "latitude", "longitude"]
            target => "ClientIPLocation"
        }
        mutate
        {
            rename =>
            {
                "[ClientIPLocation][latitude]" => "[ClientIPLocation][geo][lat]"
                "[ClientIPLocation][longitude]" => "[ClientIPLocation][geo][lon]"
            }
        }
    }

    if [OriginalClientIp]
    {
        geoip
        {
            source => "OriginalClientIp"
            fields => ["city_name", "country_code2", "country_name", "latitude", "longitude"]
            target => "OriginalClientIPLocation"
        }
        mutate
        {
            rename =>
            {
                "[OriginalClientIPLocation][latitude]" => "[OriginalClientIPLocation][geo][lat]"
                "[OriginalClientIPLocation][longitude]" => "[OriginalClientIPLocation][geo][lon]"
            }
        }
    }

}

output 
{
    elasticsearch
    {
        hosts => "{HOST}"
        document_id => "%{[@metadata][fingerprint]}"
        index => "exchange-mailtrace-{CLIENT}"
        user => "elastic"
        password => "{PASS}"
    }
}
